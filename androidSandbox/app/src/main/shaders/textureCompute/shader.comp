#version 460 
layout (local_size_x = 1, local_size_y = 2, local_size_z = 3) in;

//const int _14 = gl_NumWorkGroups.x;
//const int _15 = gl_WorkGroupSize.y;
//const int _16 = gl_WorkGroupSize.z;
//const vec3 _17 = uvec3(_14, _15, _16); 
//const highp vec3 _17 = gl_NumWorkGroups;
const float[11] _102 = float[11](0.05, 0.05, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.05, 0.05);


layout (set = 0, binding = 0) uniform mediump sampler2D in_sampler;
layout (set = 0, binding = 1, rgba32f) uniform writeonly image2D out_image;

void main(){
    uvec3 wgSize = gl_NumWorkGroups;

    /*
    uvec3 wgSize = _17;
    uvec3 dispatchSize = uvec3(gl_NumWorkGroups);
    uvec3 localInvocateID = uvec3(gl_LocalInvocationID);
    uvec3 globalInvocateID = uvec3(gl_GlobalInvocationID);
    uint localIndex = gl_LocalInvocationIndex;
    vec2 maxOffset = vec2(textureSize(in_sampler, 0)) + vec2(5.0);
    vec4 blurColor = vec4(0.0);
    for(int = -5; i <=5; i++){
        vec2 fetch = clamp(vec2(globalInvocateID.xy) + vec2(0.0, float(i)), vec2(0.0), maxOffset);
        blueColor += (texelFetch(in_sampler, ivec2(fetch), 0) * _102[i+5]);
    }
    imageStore(out_image, ivec2(globalInvocateID.xy), blueColor);
    */
}



