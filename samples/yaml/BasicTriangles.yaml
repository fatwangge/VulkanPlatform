Object:
  Models: [CUSTOM3D0]
  Textures: [texture.jpg]
  TextureMipmaps: [false]
  TextureCubemap: [false]
  VertexShaders: [basicTriangles/shader.vert.spv]
  FragmentShaders: [basicTriangles/shader.frag.spv]
  ComputeShaders: []
  # Each element in the list represent an object; pipeline index is the vertex/fragment index, because each pipeline connect one vertex shader and one fragment shader
  ModelList: [0]
  TextureList: [0]
  PipelineList: [0]

Uniform:
  # Graphcis: Custom Graphics, MVP, VP
  #Graphics: [{false, true, false},{...}]
  # Sampler: number of samplers
  #Sampler: [1, 0, ...]
  # Compute: Custom Compute, Storage, Storage for Swapchain, Storage Texture
  #Compute: [true, false, false, false] for now our scenario only need one compute pipeline
  MVP: true
  VP: false
  SamplerCount: 1
  UseMultiSamplerForOneObject: false
  ComputeStorageImage: false
  ComputeStorageImageSwapChain: false

Feature:
  GraphicsDepthTest: false
  GraphicsMSAA: false
  Graphics48BPT: false
  GraphicsPushConstant: false
  GraphicsBlend: false
  GraphicsRainbowMipmap: false
  GraphicsPipelineSkyboxID: -1
    
MainCamera:
  FreeMode: false
  Position: [0,0,-3]
  Rotation: [0,0,0]
  TargetLocation: [0,0,0]
  FOV: 90
  Z: [0.1, 256]

